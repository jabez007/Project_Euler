"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

Answer:
    4613732
Completed on Mon, 31 Mar 2014, 03:48
"""


def main(n=4e6):
    sum_even = 0
    for n in fibonacci_generator(n):
        if n % 2 == 0:
            sum_even += n
    return sum_even


def fibonacci_generator(n, a=1, b=1):
    """
    generates the fibonacci sequence up to n
    :param n:
    :return: <generator> fibonacci numbers up to n
    """
    while b < n:
        yield b
        a, b = fibonacci(a, b)
        
        
def fibonacci(a=1, b=1):
	"""
	returns the next step in the fibonacci sequence (n and n+1)
	:param a: <int> the n-1 number of the fibonacci sequence
	:param b: <int> the n number of the fibonacci sequence
	:return: (<int>, <int>) the n and n+1 numbers of the fibonacci sequence
	"""
	return b, a+b

# # # #


if __name__ == '__main__':
    print main()
